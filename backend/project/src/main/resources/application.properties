spring.application.name=project

# Postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/instagram
spring.datasource.username=jwd
spring.datasource.password=jwd

# spring.jpa.show-sql=true

spring.jpa.hibernate.ddl-auto=update


spring.output.ansi.enabled=always



logging.level.com.hotel_project_revisited=DEBUG

logging.level.org.springframework=INFO

# logging.level.org.hibernate.SQL=DEBUG
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

logging.level.org.springframework.security=DEBUG



logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx

spring.main.banner-mode=console
logging.exception-conversion-word=%wEx{15}

server.error.include-stacktrace=on_param
server.error.include-exception=false

# spring.jpa.properties.hibernate.format_sql=true


# Important for BYTEA handling in PostgreSQL
# spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.type.preferred_uuid_jdbc_type=CHAR

# File Upload Configuration
# Maximum file size (5MB)
spring.servlet.multipart.max-file-size=5MB
# Maximum request size (10MB - allows for some overhead)
spring.servlet.multipart.max-request-size=10MB
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Temp location for file uploads
spring.servlet.multipart.location=${java.io.tmpdir}

# Connection pool settings (important when storing large files)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000

# JPA settings for large objects
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Logging
logging.level.com.instragram.project=DEBUG
logging.level.org.springframework.web.multipart=DEBUG
# Ensure the underlying JDBC connection does not use auto-commit for LOB operations
spring.datasource.hikari.auto-commit=false